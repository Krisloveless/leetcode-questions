class Solution:
    def search(self, nums: List[int], target: int) -> int:
        def rbs(l, r):
            # print('rbs',l, r)
            while l <= r:
                mid = (l + r) // 2
                if nums[mid] == target:
                    return mid
                if nums[mid] > target:
                    r = mid - 1
                else:
                    l = mid + 1
            return -1
        def nbs(l, r):
            # print('nbs',l, r)
            if l > r:
                return -1
            if r == l:
                if nums[l] == target:
                    return l
                else:
                    return -1
            mid = (l + r) // 2
        
            if nums[mid] == target:
                return mid
            if nums[l] == target:
                return l
            if nums[r] == target:
                return r
            if nums[mid] <= nums[r]:
                if target > nums[mid] and target < nums[r]:
                    return rbs(mid + 1, r)
                else:
                    return nbs(l, mid - 1)
            if nums[mid] >= nums[l]:
                if target > nums[l] and target < nums[mid]:
                    return rbs(l, mid - 1)
                else:
                    return nbs(mid + 1, r)
        return nbs(0, len(nums) - 1)
