"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""

class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        seen = {}
        def helper(node):
            if node is None:
                return None
            ans = Node()
            ans.val = node.val
            seen[ans.val] = ans
            ans.neighbors = []
            for i in node.neighbors:
                if i.val in seen:
                    ans.neighbors.append(seen[i.val])
                else:
                    ans.neighbors.append(helper(i))
            return ans
        return helper(node)
