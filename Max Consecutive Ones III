class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        l = max_l = 0
        vec = collections.deque([])
        size = len(nums)
        for r in range(size):
            # print(r, l,  max_l, vec)
            if nums[r] == 1:
                max_l = max(max_l, r - l + 1)
            else:
                if k > 0:
                    k -= 1
                    vec.append(r)
                    max_l = max(max_l, r - l + 1)
                else:
                    if not vec:
                        l = r + 1
                    else:
                        idx = vec.popleft()
                        vec.append(r)
                        max_l = max(max_l, r - idx)
                        l = idx + 1
        return max_l
    
class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        ans = i = 0
        for j in range(len(nums)):
            k -= nums[j] == 0
            while k < 0:
                k += nums[i] == 0
                i += 1
            ans = max(ans, j-i+1)
        return ans
