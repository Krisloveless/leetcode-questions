from functools import cmp_to_key
class Solution:
    def reorderLogFiles(self, logs: List[str]) -> List[str]:
        def split(log):
            vec = log.split(' ')
            rest = ' '.join(vec[1:])
            return vec[0], rest, rest[0].isalpha()
        
        vec = [ (split(log)) for log in logs]
        # print(vec)
        
        def comp(a, b):
            is_a_letter_log = a[2]
            is_b_letter_log = b[2]
            if not is_a_letter_log and not is_b_letter_log:
                return 0
            elif not is_a_letter_log:
                return 1
            elif not is_b_letter_log:
                return -1
            a_content = a[1]
            b_content = b[1]
            if a_content != b_content:
                return -1 if a_content < b_content else 1
            a_id = a[0]
            b_id = b[0]
            if a_id == b_id:
                return 0
            elif a_id > b_id:
                return 1
            return -1
        
        vec.sort(key=cmp_to_key(comp))
        return [log[0] + ' ' + log[1] for log in vec]
