# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        
        def is_valid(node, min_val, max_val):
            if not node:
                return True
            val = node.val
            if val <= min_val or val >= max_val:
                return False
            res = True
            res &= is_valid(node.left, min_val, val)
            if not res:
                return False
            res &= is_valid(node.right, val, max_val)
            return res
        
        return is_valid(root, -float('inf'), float('inf'))
